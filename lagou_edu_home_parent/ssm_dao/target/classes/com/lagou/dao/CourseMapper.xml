<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.CourseMapper">
    <select id="findCourseByCondition" parameterType="com.lagou.domain.CourseVO" resultType="com.lagou.domain.Course">
        select  * from course
         <where>
             <if test="courseName != null and courseName !=''">
                 and course_name like concat('%',#{courseName},'%')
             </if>
           <!--  <if test="courseName != null and courseName != ''">
                 and course_name like concat('%',#{courseName},'%')
             </if>-->
             <if test="status != null">
                 and status=#{status}
             </if>
             <if test="true">
                 and is_del=0
             </if>
         </where>
    </select>

    <insert id="saveCourse" parameterType="Course">
        INSERT INTO course(
            course_name,
            brief,
            preview_first_field,
            preview_second_field,
            course_img_url,
            course_list_img,
            sort_num,
            price,
            discounts,
            sales,
            discounts_tag,
            course_description_mark_down,
            create_time,
            update_time
        ) VALUES(#{courseName},#{brief},#{previewFirstField},#{previewSecondField},#{courseImgUrl},#{courseListImg},#{sortNum},#{price},#{discounts},#{sales},#{discountsTag},#{courseDescriptionMarkDown},#{createTime,jdbcType=DATE},#{updateTime,jdbcType=DATE});
         <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="int">
             select  LAST_INSERT_ID()
         </selectKey>
    </insert>

  <!--  &lt;!&ndash;新增课程信息&ndash;&gt;
    <insert id="saveCourse" parameterType="com.lagou.domain.Course">
        INSERT INTO course(
        course_name,
        brief,
        preview_first_field,
        preview_second_field,
        course_img_url,
        course_list_img,
        sort_num,
        price,
        discounts,
        sales,
        discounts_tag,
        course_description_mark_down,
        create_time,
        update_time
        ) VALUES(#{courseName},#{brief},#{previewFirstField},#{previewSecondField},#{courseImgUrl},
        #{courseListImg},#{sortNum},#{price},#{discounts},#{sales},#{discountsTag},#{courseDescriptionMarkDown},
        #{createTime},#{updateTime});

        &lt;!&ndash;获取添加成功记录返回的ID值赋值给Course实体中ID属性&ndash;&gt;
        <selectKey resultType="int" order="AFTER" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>

    </insert>-->
    <insert id="saveTeacher" parameterType="Teacher">
        INSERT INTO teacher(
            course_id,
            teacher_name,
            POSITION,
            description,
            create_time,
            update_time
        ) VALUES(#{courseId},#{teacherName},#{position},#{description},#{createTime,jdbcType=DATE},#{updateTime,jdbcType=DATE});
    </insert>

    <select id="findCourseById" parameterType="int" resultType="CourseVO">
        select c.* , t.teacher_name teacher_name , t.position position, t.description description  from course c LEFT JOIN teacher t on c.id = t.course_id where c.id = #{id};
    </select>

    <update id="updateCourse" parameterType="Course">
        UPDATE course
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseName != null and courseName != ''">
                course_name = #{courseName},
            </if>
            <if test="brief != null and brief != ''">
                brief=#{brief},
            </if>
            <if test="previewFirstField != null and previewFirstField != ''">
                preview_first_field=#{previewFirstField},
            </if>
            <if test="previewSecondField != null and previewSecondField != ''">
                preview_second_field=#{previewSecondField},
            </if>
            <if test="courseImgUrl != null and courseImgUrl != ''">
                course_img_url=#{courseImgUrl},
            </if>
            <if test="courseListImg != null and courseListImg != ''">
                course_list_img=#{courseListImg},
            </if>
            <if test="sortNum != null and sortNum != ''">
                sort_num=#{sortNum},
            </if>
            <if test="price != null and price != ''">
                price=#{price},
            </if>
            <if test="discounts != null and discounts != ''">
                discounts=#{discounts},
            </if>
            <if test="sales != null and sales != '' or sales==0">
                sales=#{sales},
            </if>
            <if test="discountsTag != null and discountsTag != ''">
                discounts_tag=#{discountsTag},
            </if>
            <if test="courseDescriptionMarkDown != null and
courseDescriptionMarkDown != ''">
                course_description_mark_down=#{courseDescriptionMarkDown},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime,jdbcType=DATE},
            </if>
        </trim>
        <where>
            <if test="id!=null and id != '' ">id=#{id}</if>
        </where>
    </update>

    <update id="updateTeacher" parameterType="Teacher">
        UPDATE teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherName != null and teacherName != ''">
                teacher_name = #{teacherName},
            </if>
            <if test="position != null and position != ''">
                position = #{position},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="updateTime != null">
                update_time=#{updateTime,jdbcType=DATE}
            </if>
        </trim>
        <where>
            <if test="courseId != null and courseId != '' ">
            course_id = #{courseId}
            </if>
        </where>
    </update>

    <update id="updateCourseStatus" parameterType="Course">
        update course set status=#{status} ,update_time=#{updateTime,jdbcType=DATE} where  id = #{id}
    </update>

    <resultMap id="BaseResultMap" type="CourseSection">
        <id property="id" column="id"></id>
        <result property="courseId" column="course_id"></result>
        <result property="sectionName" column="section_name"></result>
        <result property="description" column="description"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="isDe" column="is_de"></result>
        <result property="orderNum" column="order_num"></result>
        <result property="status" column="status"></result>
        <collection property="lessonList" ofType="CourseLesson">
            <id property="id" column="lessonId"></id>
            <result property="courseId" column="course_id"></result>
            <result property="sectionId" column="section_id"></result>
            <result property="theme" column="theme"></result>
            <result property="duration" column="duration"></result>
            <result property="isFree" column="is_free"></result>
            <result property="orderNum" column="order_num"></result>
            <result property="status" column="status"></result>
        </collection>
    </resultMap>
    <select id="findSectionAndLessonByCourseId" parameterType="int" resultMap="BaseResultMap">
        select cs.* , cl.id lessonid, cl.course_id, cl.section_id , cl.theme, cl.duration, cl.create_time, cl.update_time,cl.is_del,cl.order_num,cl.`status` from course_section cs LEFT JOIN course_lesson cl on cs.id = cl.section_id where cs.course_id = #{courseId}
    </select>
</mapper>